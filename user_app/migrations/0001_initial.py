# Generated by Django 4.2.2 on 2023-06-12 18:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=254, unique=True)),
                ('full_name', models.CharField(max_length=254)),
                ('title', models.CharField(max_length=254)),
                ('phone', models.CharField(max_length=60)),
                ('company_name', models.CharField(max_length=254)),
                ('comments', models.TextField()),
                ('status', models.CharField(choices=[('Unverified', 'Unverified'), ('Email_Verified', 'Email_Verified'), ('Phone_Verified', 'Phone_Verified'), ('Refused', 'Refused'), ('Approved', 'Approved')], default='Unverified', max_length=20)),
                ('otp', models.CharField(max_length=6)),
                ('otp_attempt_counts', models.SmallIntegerField(default=0)),
                ('code', models.CharField(max_length=120, null=True, unique=True)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'user_partner',
            },
        ),
        migrations.CreateModel(
            name='User_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=254, null=True)),
            ],
            options={
                'db_table': 'user_status',
            },
        ),
        migrations.CreateModel(
            name='Security',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.CharField(max_length=6, null=True)),
                ('otp_attempt_counts', models.SmallIntegerField(default=0)),
                ('sms_counts', models.SmallIntegerField(default=0)),
                ('question1', models.CharField(max_length=50, null=True)),
                ('answer1', models.CharField(max_length=50, null=True)),
                ('question2', models.CharField(max_length=50, null=True)),
                ('answer2', models.CharField(max_length=50, null=True)),
                ('question3', models.CharField(max_length=50, null=True)),
                ('answer3', models.CharField(max_length=50, null=True)),
                ('question4', models.CharField(max_length=50, null=True)),
                ('answer4', models.CharField(max_length=50, null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('user_id', models.IntegerField()),
            ],
            options={
                'db_table': 'user_security',
                'indexes': [models.Index(fields=['user_id'], name='security_user_id')],
            },
        ),
        migrations.CreateModel(
            name='Meta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('meta_key', models.CharField(max_length=254)),
                ('meta_value', models.TextField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'user_meta',
                'indexes': [models.Index(fields=['user_id'], name='user_meta_user_id'), models.Index(fields=['meta_key'], name='user_meta_key')],
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=50, null=True)),
                ('os', models.CharField(max_length=50)),
                ('browser', models.CharField(max_length=50)),
                ('device', models.CharField(max_length=50)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('confirmed_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_id', models.IntegerField()),
            ],
            options={
                'db_table': 'user_device',
                'indexes': [models.Index(fields=['user_id'], name='device_user_id'), models.Index(fields=['-updated_at'], name='device_updated_at')],
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupon_code', models.CharField(max_length=20)),
                ('months', models.SmallIntegerField()),
                ('user_id', models.IntegerField(null=True)),
                ('started_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'user_coupon',
                'indexes': [models.Index(fields=['user_id'], name='user_coupon_user_id'), models.Index(fields=['coupon_code'], name='user_coupon_code')],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_permission', models.CharField(default='Administrator', max_length=20)),
                ('birthday', models.DateField(null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('phone', models.CharField(max_length=60)),
                ('address', models.CharField(max_length=254)),
                ('address_components', models.CharField(max_length=510)),
                ('two_factor', models.SmallIntegerField(default=1)),
                ('status', models.SmallIntegerField(choices=[(0, ''), (1, 'Verified'), (2, 'Internal User'), (3, 'Security Checking'), (4, 'Restricted'), (5, 'Closed')], default=0)),
                ('membership_date', models.DateField(null=True)),
                ('payment_status', models.CharField(max_length=30)),
                ('avatar', models.ImageField(upload_to='images/users/')),
                ('description', models.CharField(max_length=510)),
                ('close_account_info', models.CharField(max_length=254, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stripe_customer_id', models.CharField(max_length=120)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_profile',
                'indexes': [models.Index(fields=['status'], name='profile_status'), models.Index(fields=['membership_date'], name='profile_membership_date'), models.Index(fields=['stripe_customer_id'], name='profile_stripe_customer_id')],
            },
        ),
    ]
